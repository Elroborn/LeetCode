"""
Created on 2019/3/20 21:51
@File:有效的数独.py
@author: coderwangson
"""
"#codeing=utf-8"


class Solution(object):
    def isDup(self,s):
        l = list(s.replace(".",""))
        return len(set(l))==len(l)

    def isValidSudoku(self, board):
        """
        :type board: List[List[str]]
        :rtype: bool
        """

        # 检查行
        for line in board:
            s = "".join(line)
            if not self.isDup(s):
                return False
        # 检查列
        for i in range(len(board[0])):
            col = ""
            for j in range(len(board)):
                col +=board[j][i]
                # print(board[i][j])
                
            if not self.isDup(col):
                return False

        # 检查每个小方块
        return True

# l = ["5","3",".",".","7",".",".",".","."]
# s = "".join(l)

print(Solution().isValidSudoku([
  ["5","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]))
# l = [
#   ["5","3",".",".","7",".",".",".","."],
#   ["6",".",".","1","9","5",".",".","."],
#   [".","9","8",".",".",".",".","6","."],
#   ["8",".",".",".","6",".",".",".","3"],
#   ["4",".",".","8",".","3",".",".","1"],
#   ["7",".",".",".","2",".",".",".","6"],
#   [".","6",".",".",".",".","2","8","."],
#   [".",".",".","4","1","9",".",".","5"],
#   [".",".",".",".","8",".",".","7","9"]
# ]
#
# print(l[:,0:1])